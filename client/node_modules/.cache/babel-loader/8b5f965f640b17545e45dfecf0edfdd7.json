{"ast":null,"code":"var _jsxFileName = \"/home/ccedric/LEARN/stage/Myapp/client/src/App.js\";\nimport React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MaterialTable from \"material-table\";\nimport \"./App.css\";\nimport socketIOClient from \"socket.io-client\";\nimport Axios from \"axios\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.socket = socketIOClient(\"http://localhost:8080\");\n    this.socket.emit(\"new\");\n    this.state = {\n      columns: [{\n        title: \"Name\",\n        field: \"name\"\n      }, {\n        title: \"Type\",\n        field: \"type\"\n      }, {\n        title: \"Price\",\n        field: \"price\",\n        type: \"numeric\"\n      }, {\n        title: \"rating\",\n        field: \"rating\",\n        type: \"numeric\"\n      }, {\n        title: \"warranty years\",\n        field: \"warranty_years\",\n        type: \"numeric\"\n      }],\n      items: []\n    };\n  }\n\n  handleClick() {\n    console.log(\"clicked\");\n  }\n\n  async getItem() {\n    const data = await Axios.get(\"http://localhost:8080/items\"); //    console.log(data);\n\n    const data_string = JSON.stringify(data.data);\n    console.log(data_string);\n    const data_array = JSON.parse(data_string);\n    console.log(data_array);\n    this.setState({\n      items: data_array\n    });\n    console.log(this.state.items.length);\n  }\n\n  render() {\n    if (this.state.items.length < 1) {\n      console.log(this.state.items.length);\n      this.getItem();\n      console.log(\"salut\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Loading\"));\n    }\n\n    console.log(this.state.items);\n    return (\n      /*\n      <TableContainer component={Paper}>\n        <Table className=\"\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Items</TableCell>\n              <TableCell align=\"right\">type</TableCell>\n              <TableCell align=\"right\">price</TableCell>\n              <TableCell align=\"right\">rating</TableCell>\n              <TableCell align=\"right\">warranty years</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.items.map(item => (\n              <TableRow key={item.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {item.name}\n                </TableCell>\n                <TableCell align=\"right\">{item.type}</TableCell>\n                <TableCell align=\"right\">{item.price}â‚¬</TableCell>\n                <TableCell align=\"right\">{item.rating}</TableCell>\n                <TableCell align=\"right\">{item.warranty_years}</TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleClick}\n                  >\n                    modify\n                  </Button>\n                  <Button variant=\"contained\" color=\"secondary\">\n                    delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n            <TableRow>\n              <TableCell>\n                <TextField id=\"standard-basic\" label=\"Name\" align=\"right\" />\n              </TableCell>\n              <TableCell>\n                <TextField id=\"standard-basic\" label=\"Type\" align=\"right\" />\n              </TableCell>\n              <TableCell>\n                <TextField id=\"standard-basic\" label=\"Price\" align=\"right\" />\n              </TableCell>\n              <TableCell>\n                <TextField id=\"standard-basic\" label=\"Rating\" align=\"right\" />\n              </TableCell>\n              <TableCell>\n                <TextField id=\"standard-basic\" label=\"Warranty\" align=\"right\" />\n              </TableCell>\n              <TableCell>\n                <Button variant=\"contained\">add</Button>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>*/\n      React.createElement(MaterialTable, {\n        title: \"Item list\",\n        columns: this.state.columns,\n        data: this.state.items,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              this.setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState,\n                  data\n                };\n              });\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n\n              if (oldData) {\n                this.setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState,\n                    data\n                  };\n                });\n              }\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              this.setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState,\n                  data\n                };\n              });\n            }, 600);\n          })\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ccedric/LEARN/stage/Myapp/client/src/App.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TextField","MaterialTable","socketIOClient","Axios","App","Component","constructor","socket","emit","state","columns","title","field","type","items","handleClick","console","log","getItem","data","get","data_string","JSON","stringify","data_array","parse","setState","length","render","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MaterialTable from \"material-table\";\nimport \"./App.css\";\nimport socketIOClient from \"socket.io-client\";\nimport Axios from \"axios\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.socket = socketIOClient(\"http://localhost:8080\");\n    this.socket.emit(\"new\");\n    this.state = {\n      columns: [\n        { title: \"Name\", field: \"name\" },\n        { title: \"Type\", field: \"type\" },\n        { title: \"Price\", field: \"price\", type: \"numeric\" },\n        { title: \"rating\", field: \"rating\", type: \"numeric\" },\n        { title: \"warranty years\", field: \"warranty_years\", type: \"numeric\" }\n      ],\n      items: []\n    };\n  }\n  handleClick() {\n    console.log(\"clicked\");\n  }\n\n  async getItem() {\n    const data = await Axios.get(\"http://localhost:8080/items\");\n    //    console.log(data);\n    const data_string = JSON.stringify(data.data);\n    console.log(data_string);\n    const data_array = JSON.parse(data_string);\n    console.log(data_array);\n    this.setState({ items: data_array });\n    console.log(this.state.items.length);\n  }\n  render() {\n    if (this.state.items.length < 1) {\n      console.log(this.state.items.length);\n      this.getItem();\n      console.log(\"salut\");\n      return (\n        <div>\n          <header className=\"App-header\">Loading</header>\n        </div>\n      );\n    }\n    console.log(this.state.items);\n    return (\n      /*\n      <TableContainer component={Paper}>\n        <Table className=\"\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Items</TableCell>\n              <TableCell align=\"right\">type</TableCell>\n              <TableCell align=\"right\">price</TableCell>\n              <TableCell align=\"right\">rating</TableCell>\n              <TableCell align=\"right\">warranty years</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.items.map(item => (\n              <TableRow key={item.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {item.name}\n                </TableCell>\n                <TableCell align=\"right\">{item.type}</TableCell>\n                <TableCell align=\"right\">{item.price}â‚¬</TableCell>\n                <TableCell align=\"right\">{item.rating}</TableCell>\n                <TableCell align=\"right\">{item.warranty_years}</TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleClick}\n                  >\n                    modify\n                  </Button>\n                  <Button variant=\"contained\" color=\"secondary\">\n                    delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n            <TableRow>\n              <TableCell>\n                <TextField id=\"standard-basic\" label=\"Name\" align=\"right\" />\n              </TableCell>\n              <TableCell>\n                <TextField id=\"standard-basic\" label=\"Type\" align=\"right\" />\n              </TableCell>\n              <TableCell>\n                <TextField id=\"standard-basic\" label=\"Price\" align=\"right\" />\n              </TableCell>\n              <TableCell>\n                <TextField id=\"standard-basic\" label=\"Rating\" align=\"right\" />\n              </TableCell>\n              <TableCell>\n                <TextField id=\"standard-basic\" label=\"Warranty\" align=\"right\" />\n              </TableCell>\n              <TableCell>\n                <Button variant=\"contained\">add</Button>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>*/\n      <MaterialTable\n        title=\"Item list\"\n        columns={this.state.columns}\n        data={this.state.items}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                this.setState(prevState => {\n                  const data = [...prevState.data];\n                  data.push(newData);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  this.setState(prevState => {\n                    const data = [...prevState.data];\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                this.setState(prevState => {\n                  const data = [...prevState.data];\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            })\n        }}\n      />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}